load("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/fdisp/fdispMOD_inputs.RData")
load("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/fdisp/proper intnat/scaled_strength/revisions/new_ntw_and_abun.RData")
source("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/fdisp/proper intnat/scaled_strength/revisions/nearest_neighbors_func.R")
View(t2)
getwd()
t3 <- t2[,-3] # getting rid of body depth as super high correlation with weight
t<-t2[,14:24]
season <- NA
for (i in 1:16){season <- c(season, colnames(t)[which(t[i,] == max(t[i,]))])}
t3$season <- as.factor(season[-c(1, 4,19)]) # taking out NA and ties.
t <- t2[,26:33]
daily <- NA
for (i in 1:16){daily <- c(daily, colnames(t)[which(t[i,] == max(t[i,]))])}
t3$daily <- as.factor(daily[-1])
t3 <- t3[,-c(13:23, 25:32)] # removing superfluous cols
weight <- c(0.5, 0.5,1,0.5,0.5,1, rep(1/6, 6), rep(1,3))
t3 <- rbind(t3, weight)
t3
wweight
weight
t3 <- t3[-17,]
write.csv(t3, "polli_traits.csv")
pl_t <- pl_t[,-16]
pl_t
write.csv(pl_t, "plant_traits.csv")
pl.weight
pl.weight <- pl.weight[-16]
pl.weight
pl.weight <- c(rep(1, 8), rep(0.25, 4), rep(1, 3))
read.csv("polli_traits.csv")
read.csv("polli_traits.csv")[,-1]
read.table("polli_traits.csv", sep=",")
read.table()
?read.table
read.table("polli_traits.csv", sep=",", header=T, row.names = 1 )
read.table("plant_traits.csv", sep=",", header=T, row.names = 1 )
require(magrittr)
require(reshape2)
pollen <- read.table("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/Nacho_data/Pollen_abundance.txt", header = TRUE)
plant_traits <- read.table("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/updated/PlantTraitsUpdated.txt", header = TRUE, dec=",")
pol <- pollen[order(pollen$Owner_code, pollen$Pollenspecies, pollen$species_code),]
pol <- pol[,c(4,5,8,9,10)]
pol %>%
split(., .$Owner_code) %>%
lapply(., function(x){
x <- droplevels(x)
by.plant <- split(x, x$Pollenspecies)
n.insect <- lapply(by.plant, function(y){
n.insects <- length(unique(y$species_code))
pl.n.insects <- data.frame(Pollenspecies=unique(y$Pollenspecies), n.insects=n.insects)
return(pl.n.insects)
})
n.insects.df <- do.call(rbind, n.insect)
return(n.insects.df = n.insects.df)
}) -> essai
essaimou <- melt(essai)[,c(1,3,4)]
a <- matrix(NA, 24,15)
rownames(a) <- unique(essaimou$L1)
colnames(a) <- unique(essaimou$Pollenspecies)
for ( i in 1:24){
x <- essai[[i]]
a[i,colnames(a) %in% x$Pollenspecies] <- x$n.insects
}
a[which(is.na(a))] <- 0
noms <- plant_traits[,c(1,4)]
noms <- noms[order(noms$CODE_ID),]
a <- a[,order(colnames((a)))]
colnames(a) <- noms$species
new.pl.ab <- a
load("/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/fdisp/fdispMOD_inputs.RData")
rownames(p2)
new.pl.ab <- new.pl.ab[rownames(new.pl.ab) %in% rownames(p2),]
# write.csv(new.pl.ab,"C:/Users/camille/Desktop/PhD/Australian data/mes trucs/FD/fdisp/proper intnat/scaled_strength/revisions/new_plant_ab.csv" )
takeout <- c("gargablee", "garseaspr", "garunilin")
pol<- pol[-which(pol$Owner_code %in% takeout),]
pol <- droplevels(pol)
# network weights
pol %>%
split(., .$Owner_code) %>%
lapply(., acast, Pollenspecies ~ species_code, length) -> n.insect.ntw
# just to check.ok, need to make names match first. ok matches. super yay
n.insect.ntw <- lapply(1:21, function(i){
n1 <- as.matrix(n.insect.ntw[[i]])
rownames(n1) <- gsub("_", "", rownames(n1))
rownames(n1) <- noms$species[noms$CODE_ID  %in% rownames(n1)]
n1 <- n1[order(rownames(n1)),]
net <- n1
n1[which(n1>0)] <- 1
n2 <- as.matrix(ntw[[i]])
n2[which(n2>0)] <- 1
if(all(n1==t(n2))) {
return(t(net))
}else{
return(NULL)}
})
n.insect.ntw
melt(n.insect.ntw)
site <- rownames(a2)
ntw <- n.insect.ntw
lapply(1:21, function(i, x){
site <- i
x <- ntw[[i]]
temp <- melt(x)
temp <- cbind(site, temp)
return(temp)
}) %>%
do.call(rbind, .) %>%
as.data.frame(.) -> interactions
colnames(interactions) <- c("Site", "Pol_sp", "Plant_sp", "Links")
interactions
getwd
getwd()
read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/code/interactions.csv", sep=",", header=T, row.names = 1 ) %>%
split(., .$Site) -> ntw
read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/interactions.csv", sep=",", header=T, row.names = 1 ) %>%
split(., .$Site) -> ntw
ntw[[1]]
?aggregate
?acast
with(ntw[[1]], acast(Links, by=list(Pol_sp, Plant_sp))
)
with(ntw[[1]], matrix(Links, nrow=length(unique(Pol_sp)), ncol=length(unique(Plant_sp)))
)
with(ntw[[1]], matrix(Links, nrow=length(unique(Pol_sp)), ncol=length(unique(Plant_sp))))
x <-with(ntw[[1]], matrix(Links, nrow=length(unique(Pol_sp)), ncol=length(unique(Plant_sp))))
x <- ntw[[1]]
net <- matrix(x$Links, nrow=length(unique(x$Pol_sp)), ncol=length(unique(x$Plant_sp)))
net
e
colnames(net)<- unique(x$Plant_sp)
rowna,es(net <- unique(x$Pol_sp))
rownames(net <- unique(x$Pol_sp))
x
unique(x$Pol_sp)
rownames(net) <- unique(x$Pol_sp)
net <- matrix(x$Links, nrow=length(unique(x$Pol_sp)), ncol=length(unique(x$Plant_sp)))
colnames(net)<- unique(x$Plant_sp)
rownames(net) <- unique(x$Pol_sp)
net
head*ntw[[1]]
head(ntw[[1]])
read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/interactions.csv", sep=",", header=T, row.names = 1 ) %>%
split(., .$Site) %>% #-> ntw
lapply(., function(x){
net <- matrix(x$Links, nrow=length(unique(x$Pol_sp)), ncol=length(unique(x$Plant_sp)))
colnames(net)<- unique(x$Plant_sp)
rownames(net) <- unique(x$Pol_sp)
return(net)
}) -> ntw2
ntw2[[1]]
a2 <- read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/pollinator_abundances.csv", sep=",", header=T, row.names = 1 )
a2
p <- read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/plant_abundances_bin.csv", sep=",", header=T, row.names = 1 )
pol.coords <- species.coords(t3, a, weight)
library(FD)
pol.coords <- species.coords(t3, a, weight)
t3
a
a2 <- read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/pollinator_abundances.csv", sep=",", header=T, row.names = 1 )
a <- a2
a[which(a>0)] <- 1
a2 <- read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/pollinator_abundances.csv", sep=",", header=T, row.names = 1 )
a <- a2
a[which(a>0)] <- 1
a <- as.matrix(a2)
a[which(a>0)] <- 1
a
t3
pol.coords <- species.coords(t3, a, weight)
weight <- c(0.5, 0.5,1,0.5,0.5,1, rep(1/6, 6), rep(1,3))
pol.coords <- species.coords(t3, a, weight)
pol.measures <- FD_measures(pol.coords$coords, pol.coords$centr, a)
pl.coords <- species.coords(pl_t, p, pl.weight)
pl_t <-  read.table("plant_traits.csv", sep=",", header=T, row.names = 1 )
pl.weight <- c(rep(1, 8), rep(0.25, 4), rep(1, 3))
p <- read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/plant_abundances_bin.csv", sep=",", header=T, row.names = 1 )
pl.coords <- species.coords(pl_t, p, pl.weight)
pl_t
p
pl_t <-  read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/plant_traits.csv", sep=",", header=T, row.names = 1 )
pl.coords <- species.coords(pl_t, p, pl.weight)
pl.measures <- FD_measures(pl.coords$centr, pl.coords$centr, p)
# with weighted centroid: only originality should change
w.pol.coords <- species.coords(t3,a2,weight)
w.pol.measures <- FD_measures(w.pol.coords$coords, w.pol.coords$centr, a2)
colnames(w.pol.measures) <- c("w.orig", "w.redund", "w.uniq")
ntw %>% lapply(., getspe, measure="hs") %>% do.call(c,.) -> pol.hs
library(ESM)
library(bipartite)
ntw %>% lapply(., getspe, measure="hs") %>% do.call(c,.) -> pol.hs
ntw[[1]]
read.table("C:/Users/camille/Desktop/Network_functional_Roles_manuscript/data/interactions.csv", sep=",", header=T, row.names = 1 ) %>%
split(., .$Site) %>%
lapply(., function(x){
net <- matrix(x$Links, nrow=length(unique(x$Pol_sp)), ncol=length(unique(x$Plant_sp)))
colnames(net)<- unique(x$Plant_sp)
rownames(net) <- unique(x$Pol_sp)
return(net)
}) -> ntw
ntw %>% lapply(., getspe, measure="hs") %>% do.call(c,.) -> pol.hs
ntw <- lapply(ntw, t)
ntw %>% lapply(., getspe, measure="hs") %>% do.call(c,.) -> pl.hs
ntw %>%
lapply(., specieslevel, index=c(
"normalised degree", "species strength","species specificity", "d", "PDI"),
level="higher") %>%
do.call(rbind, .) -> splvl.pollis
ntw %>%
lapply(., specieslevel, index=c(
"normalised degree", "species strength","species specificity", "d", "PDI"),
level="lower") %>%
do.call(rbind, .) -> splvl.plants
# removing the lassor outlier from spslevel but keeping line for later match with POLLIS
splvl.pollis
pol.hs[4]
splvl.pollis[4,]
pol.measures <- rbind(pol.measures[1:3,], c(NA, NA, NA), pol.measures[4:89,])
w.pol.measures <- rbind(w.pol.measures[1:3,], c(NA, NA, NA), w.pol.measures[4:89,])
# combine and save data
pol.rev <- cbind(pol.measures, w.pol.measures, splvl.pollis, pol.hs)
plant.rev <- cbind(pl.measures, w.pl.measures, splvl.plants, pl.hs)
plant.rev <- cbind(pl.measures, splvl.plants, pl.hs)
